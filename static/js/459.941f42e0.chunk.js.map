{"version":3,"file":"static/js/459.941f42e0.chunk.js","mappings":"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","sources":["components/mainContainer.styled.jsx","redux/contacts/selectors.js","components/Contacts/contacts.styled.jsx","components/Contacts/contacts.jsx","components/Filter/filter.styled.jsx","components/Filter/filter.jsx","components/Form/form.styled.jsx","components/Form/form.jsx","components/Loader/loader.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 26px;\n  color: #010101;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import styled from \"styled-components\";\n\nexport const List =styled.ul`\n  padding-left: 0;\n`\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 15px;\n  font-size: 33px;\n  gap: 10px;\n`;\nexport const Button = styled.button`\n    width: 75px;\n    height: 35px;\n    background-color: #f2f83a;\n    border-radius: 5px;\n    &:hover{\n    background-color: #ed1c1c;\n    }\n` \nexport const Paragraf = styled.p`\n    margin: 0;\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilter, selectContacts } from 'redux/contacts/selectors';\nimport {List, Item, Button, Paragraf } from './contacts.styled';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const dataFilter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n    \n  const onFilteredContacts = () => {\n    if (dataFilter) {\n      const normalisedContacts = dataFilter.toLowerCase();\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalisedContacts)\n      );\n    }\n    return contacts;\n  };\n  \n  const filteredContacts = onFilteredContacts();\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <Paragraf>\n            {name}: {number}\n          </Paragraf>\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            DELETE\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactsList;\n","import styled from \"styled-components\";\n\nexport const WraperFilter = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 500px;\n    padding: 15px;\n    border: 3px solid blue; \n    border-radius: 7px;\n`\nexport const Label = styled.label`\n    margin: 0 10px;       \n    `\nexport const Input = styled.input`\n    margin: 10px;\n    font-size: 26px;\n    width: 200px;\n    height: 35px;\n    border-radius: 7px;\n    border-color: #60a1fb;\n    &:hover {\n    border-color: #1047c7;\n  }\n`","\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterContact } from 'redux/contacts/contactsFilterSlice';\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { WraperFilter, Label, Input } from \"./filter.styled\"\n\nconst Filter = () => {\n    const dataFilter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  \n  const HandlChange = e => {\n    dispatch(filterContact(e.target.value));\n  }\n    return (\n      <WraperFilter>\n        <Label htmlFor=\"labelFilter\">Filter by name</Label>\n        <Input type=\"text\" value={dataFilter} onChange={HandlChange} />\n      </WraperFilter>\n    );}\n\nexport default Filter","import styled from \"styled-components\";\n\nexport const WraperForm = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 15px;\n    width: 500px;\n    border: 4px solid blue;\n    border-radius: 8px;\n`\nexport const Label = styled.label`\n    margin: 0 10px;       \n    `\nexport const Input = styled.input`\n    margin: 10px;\n    font-size: 26px;\n    width: 200px;\n    height: 35px;\n    border-radius: 7px;\n    border-color: #60a1fb;\n    &:hover {\n    border-color: #1047c7;\n  }\n`\nexport const BtnSubmit = styled.button`\n    margin: 10px;\n    font-size: 26px;\n    width: 205px;\n    height: 35px;\n    background-color: #c6d6eb;\n    border-radius: 7px;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    cursor: pointer;\n`","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid'\nimport { WraperForm, Input, BtnSubmit, Label } from './form.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\n\nconst Form = ()=> {\n  const [contact, setContact] = useState({\n    name: '',\n    number: '',\n  });\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    setContact(prev => ({ ...prev, [target.name]: target.value }));\n  };\n\n  const isContactExsist = newName => {\n    if (contacts.length) {\n      return contacts.find(({ name }) => name === newName);\n    }\n  };\n\n  const addNewContact = newContact => {\n    isContactExsist(newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : dispatch(addContact(newContact));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const id = nanoid(5);\n    const {name, number} = contact\n    addNewContact({ id, name, number  });\n   setContact({name:'', number:''});\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <WraperForm>\n        <Label htmlFor=\"nameInput\" className=\"lableInputName\">\n          Name\n        </Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={contact.name}\n        />\n        <Label htmlFor=\"numberInput\" className=\"lableInputNumber\">\n          Number\n        </Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={contact.number}\n        />\n        <BtnSubmit type=\"submit\" className=\"btnSubmit\">\n          Add contact\n        </BtnSubmit>\n      </WraperForm>\n    </form>\n  );\n};\n\nexport default Form;\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"100\"\n      visible={true}\n    />\n  );\n};\nexport default Loader;","import { Container } from 'components/mainContainer.styled';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport ContactsList from 'components/Contacts/contacts';\nimport Filter from 'components/Filter/filter';\nimport Form from 'components/Form/form';\nimport Loader from 'components/Loader/loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactsList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","List","Item","Button","Paragraf","useSelector","dataFilter","dispatch","useDispatch","filteredContacts","normalisedContacts","toLowerCase","name","includes","onFilteredContacts","map","id","number","type","onClick","deleteContact","WraperFilter","Label","Input","htmlFor","value","onChange","e","filterContact","target","WraperForm","BtnSubmit","useState","contact","setContact","handleChange","prev","addNewContact","newContact","newName","length","find","isContactExsist","addContact","alert","onSubmit","preventDefault","nanoid","className","required","strokeColor","strokeWidth","animationDuration","width","visible","useEffect","fetchContacts"],"sourceRoot":""}